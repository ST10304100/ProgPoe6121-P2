@model PROG_PART_2.Models.ClaimViewModel 

@{
    ViewData["Title"] = "Submit Claim";
}

<div class="container-claims">
<h2>Submit Your Claim</h2>
 
    <form asp-action="Create" enctype="multipart/form-data" method="post" id="claimForm">
<div class="form-group">
<label asp-for="HoursWorked"></label>
<input asp-for="HoursWorked" class="form-control" required />
<span asp-validation-for="HoursWorked" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label asp-for="HourlyRate"></label>
<input asp-for="HourlyRate" class="form-control" required />
<span asp-validation-for="HourlyRate" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label asp-for="StartDate"></label>
<input asp-for="StartDate" type="date" class="form-control" required />
<span asp-validation-for="StartDate" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label asp-for="EndDate"></label>
<input asp-for="EndDate" type="date" class="form-control" required />
<span asp-validation-for="EndDate" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label asp-for="Notes"></label>
<textarea asp-for="Notes" class="form-control" rows="4" placeholder="Add any additional notes..."></textarea>
<span asp-validation-for="Notes" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label for="SupportingDocuments" style="@(ViewBag.InvalidFile != null && (bool)ViewBag.InvalidFile ? "color: red;" : "color: black;")">Supporting Documents (PDF only, max 15MB)</label>
<input type="file" name="SupportingDocuments" id="SupportingDocuments" class="form-control" multiple required />
<span asp-validation-for="SupportingDocuments" class="text-danger"></span>
</div>
 
        <button type="submit" class="btn-claims btn-primary"><i class="fa-solid fa-upload"></i> Submit Claim</button>
</form>
</div>
 
@section Scripts {
<partial name="_ValidationScriptsPartial" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
        $(document).ready(function () {
            // File validation
            $('#SupportingDocuments').on('change', function () {
                let maxFileSize = 15 * 1024 * 1024; // 15MB
                let valid = true;
 
                $.each(this.files, function (i, file) {
                    if (file.type !== 'application/pdf') {
                        alert('Only PDF files are allowed.');
                        valid = false;
                        return false; // Exit loop
                    }
                    if (file.size > maxFileSize) {
                        alert('File size cannot exceed 15MB.');
                        valid = false;
                        return false;
                    }
                });
 
                if (!valid) {
                    $(this).val('');
                }
            });
 
            // Date range validation
            $('#claimForm').on('submit', function (e) {
                const startDate = new Date($('#StartDate').val());
                const endDate = new Date($('#EndDate').val());
                const today = new Date();
 
                // Set the first and last day of the current and previous months
                const firstDayCurrentMonth = new Date(today.getFullYear(), today.getMonth(), 1);
                const lastDayCurrentMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0); // Last day of current month
                const firstDayPreviousMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
                const lastDayPreviousMonth = new Date(today.getFullYear(), today.getMonth(), 0); // Last day of previous month
 
                // Calculate the difference in days between start and end date
                const daysDifference = (endDate - startDate) / (1000 * 60 * 60 * 24);
 
                // Check if start and end dates are within allowed range (current or previous month) and within 31 days
                if (
                    !(
                        (startDate >= firstDayCurrentMonth && endDate <= lastDayCurrentMonth) ||
                        (startDate >= firstDayPreviousMonth && endDate <= lastDayPreviousMonth)
                    ) || daysDifference > 32
                ) {
                    alert('The date range must be within the current or previous month and cannot exceed 30 days.');
                    e.preventDefault();
                }
            });
 
            // Check for existing claim for the month
        @if (ViewData["ClaimExists"] != null && (bool)ViewData["ClaimExists"])
        {
<text>
                    alert("You have already submitted a claim for this month.");
</text>
        }
                });
</script>
}<div class="container-claims">
<h2>Submit Your Claim</h2>
 
    <form asp-action="Create" enctype="multipart/form-data" method="post" id="claimForm">
<div class="form-group">
<label asp-for="HoursWorked"></label>
<input asp-for="HoursWorked" class="form-control" required />
<span asp-validation-for="HoursWorked" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label asp-for="HourlyRate"></label>
<input asp-for="HourlyRate" class="form-control" required />
<span asp-validation-for="HourlyRate" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label asp-for="StartDate"></label>
<input asp-for="StartDate" type="date" class="form-control" required />
<span asp-validation-for="StartDate" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label asp-for="EndDate"></label>
<input asp-for="EndDate" type="date" class="form-control" required />
<span asp-validation-for="EndDate" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label asp-for="Notes"></label>
<textarea asp-for="Notes" class="form-control" rows="4" placeholder="Add any additional notes..."></textarea>
<span asp-validation-for="Notes" class="text-danger"></span>
</div>
 
        <div class="form-group">
<label for="SupportingDocuments" style="@(ViewBag.InvalidFile != null && (bool)ViewBag.InvalidFile ? "color: red;" : "color: black;")">Supporting Documents (PDF only, max 15MB)</label>
<input type="file" name="SupportingDocuments" id="SupportingDocuments" class="form-control" multiple required />
<span asp-validation-for="SupportingDocuments" class="text-danger"></span>
</div>
 
        <button type="submit" class="btn-claims btn-primary"><i class="fa-solid fa-upload"></i> Submit Claim</button>
</form>
</div>
 
@section Scripts {
<partial name="_ValidationScriptsPartial" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
        $(document).ready(function () {
            // File validation
            $('#SupportingDocuments').on('change', function () {
                let maxFileSize = 15 * 1024 * 1024; // 15MB
                let valid = true;
 
                $.each(this.files, function (i, file) {
                    if (file.type !== 'application/pdf') {
                        alert('Only PDF files are allowed.');
                        valid = false;
                        return false; // Exit loop
                    }
                    if (file.size > maxFileSize) {
                        alert('File size cannot exceed 15MB.');
                        valid = false;
                        return false;
                    }
                });
 
                if (!valid) {
                    $(this).val('');
                }
            });
 
            // Date range validation
            $('#claimForm').on('submit', function (e) {
                const startDate = new Date($('#StartDate').val());
                const endDate = new Date($('#EndDate').val());
                const today = new Date();
 
                // Set the first and last day of the current and previous months
                const firstDayCurrentMonth = new Date(today.getFullYear(), today.getMonth(), 1);
                const lastDayCurrentMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0); // Last day of current month
                const firstDayPreviousMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
                const lastDayPreviousMonth = new Date(today.getFullYear(), today.getMonth(), 0); // Last day of previous month
 
                // Calculate the difference in days between start and end date
                const daysDifference = (endDate - startDate) / (1000 * 60 * 60 * 24);
 
                // Check if start and end dates are within allowed range (current or previous month) and within 31 days
                if (
                    !(
                        (startDate >= firstDayCurrentMonth && endDate <= lastDayCurrentMonth) ||
                        (startDate >= firstDayPreviousMonth && endDate <= lastDayPreviousMonth)
                    ) || daysDifference > 32
                ) {
                    alert('The date range must be within the current or previous month and cannot exceed 30 days.');
                    e.preventDefault();
                }
            });
 
            // Check for existing claim for the month
        @if (ViewData["ClaimExists"] != null && (bool)ViewData["ClaimExists"])
        {
<text>
                    alert("You have already submitted a claim for this month.");
</text>
        }
                });
</script>
}

<style>
    body {
        background-color: #261132; /* Dark purple background */
        font-family: 'Poppins', sans-serif;
        color: #ffffff; /* White text for better contrast */
    }

    .container-claims {
        background-color: #534B58; /* Grey background for the form container */
        padding: 40px;
        border-radius: 10px;
        width: 100%;
        max-width: 600px;
        margin: 50px auto;
        box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.3);
    }

    .claim-title {
        text-align: center;
        color: #f1c40f; /* Yellow title */
        font-size: 2rem;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        color: #ffffff; /* White labels for better visibility */
        font-weight: bold;
    }

    .form-control {
        background-color: #261132; /* Dark purple input fields */
        color: #ffffff; /* White text */
        border: 1px solid #f1c40f; /* Yellow border */
        padding: 10px;
    }

    .form-control:focus {
        border-color: #f1c40f; /* Yellow focus */
        box-shadow: 0 0 5px rgba(241, 196, 15, 0.5); /* Yellow glow on focus */
    }

    .btn-claims {
        background-color: #f1c40f; /* Yellow button */
        color: #261132; /* Dark purple text */
        font-weight: bold;
        padding: 12px 0;
        width: 100%;
        border: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    .btn-claims:hover {
        background-color: #ffffff; /* White on hover */
        color: #261132; /* Dark purple text */
    }

    .text-danger {
        color: #ff6f61; /* Bright red for error messages */
    }

</style>
